var TypeToast;
(function (TypeToast) {
    TypeToast[TypeToast["INFO"] = 0] = "INFO";
    TypeToast[TypeToast["WARNING"] = 1] = "WARNING";
    TypeToast[TypeToast["ERROR"] = 2] = "ERROR";
})(TypeToast || (TypeToast = {}));
var Toast = (function () {
    function Toast(parent) {
        this.REMOVE_TIME_MS = 10000;
        this.parent = parent;
        this.duration = this.REMOVE_TIME_MS;
    }
    Toast.prototype.showSuccess = function (title, message) {
        var text = this.getCustomToast(title, message, "success");
        var toast = this.addToast(text);
    };
    Toast.prototype.showInfo = function (title, message) {
        var text = this.getCustomToast(title, message, "info");
        var toast = this.addToast(text);
    };
    Toast.prototype.showWarning = function (title, message) {
        var text = this.getCustomToast(title, message, "warning");
        var toast = this.addToast(text);
    };
    Toast.prototype.showError = function (title, message) {
        var text = this.getCustomToast(title, message, "error");
        var toast = this.addToast(text);
    };
    Toast.prototype.getCustomToast = function (title, message, type) {
        var text = '<div class="dj-toast"><div class="dj-toast-icon-' + type + '"></div>' +
            '<div class="dj-toast-text"><div class="dj-toast-title">' +
            title + '</div><div class="dj-toast-message">' +
            message + '</div></div></div>';
        return text;
    };
    Toast.prototype.addToast = function (toastHtml) {
        var _this = this;
        var container = this.getContainer();
        var toast = $(toastHtml);
        toast.hide();
        toast.appendTo(container);
        var closeBtn = $('<div class="dj-toast-icon-close"></div>');
        closeBtn.appendTo(toast);
        closeBtn.on("pointerdown", function () { _this.removeToast(toast); });
        setTimeout(function () { _this.removeToast(toast); }, _this.duration);
        toast.fadeIn(Toast.FADE_MS);
        return toast;
    };
    Toast.prototype.getContainer = function () {
        if ($(".dj-toast-container").length == 0) {
            this.parent.append("<div class=\"dj-toast-container\"></div>");
        }
        return $(".dj-toast-container");
    };
    Toast.prototype.removeToast = function (toast) {
        toast.fadeOut(Toast.FADE_MS, function () {
            toast.remove();
        });
    };
    return Toast;
}());
Toast.FADE_MS = 400;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVsZW1lbnRzL3RvYXN0L1RvYXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLElBQUssU0FJSjtBQUpELFdBQUssU0FBUztJQUNWLHlDQUFJLENBQUE7SUFDSiwrQ0FBTyxDQUFBO0lBQ1AsMkNBQUssQ0FBQTtBQUNULENBQUMsRUFKSSxTQUFTLEtBQVQsU0FBUyxRQUliO0FBRUQ7SUFVSSxlQUFZLE1BQVU7UUFMZCxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQU0zQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7SUFDeEMsQ0FBQztJQUVNLDJCQUFXLEdBQWxCLFVBQW1CLEtBQVksRUFBRSxPQUFjO1FBQzNDLElBQUksSUFBSSxHQUFXLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNsRSxJQUFJLEtBQUssR0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSx3QkFBUSxHQUFmLFVBQWdCLEtBQVksRUFBRSxPQUFjO1FBQ3hDLElBQUksSUFBSSxHQUFXLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMvRCxJQUFJLEtBQUssR0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTSwyQkFBVyxHQUFsQixVQUFtQixLQUFZLEVBQUUsT0FBYztRQUMzQyxJQUFJLElBQUksR0FBVyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbEUsSUFBSSxLQUFLLEdBQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRU0seUJBQVMsR0FBaEIsVUFBaUIsS0FBWSxFQUFFLE9BQWM7UUFDekMsSUFBSSxJQUFJLEdBQVcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2hFLElBQUksS0FBSyxHQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVPLDhCQUFjLEdBQXRCLFVBQXVCLEtBQVksRUFBRSxPQUFjLEVBQUUsSUFBVztRQUM1RCxJQUFJLElBQUksR0FDSixrREFBa0QsR0FBRyxJQUFJLEdBQUcsVUFBVTtZQUN0RSx5REFBeUQ7WUFDekQsS0FBSyxHQUFHLHNDQUFzQztZQUM5QyxPQUFPLEdBQUcsb0JBQW9CLENBQUM7UUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU8sd0JBQVEsR0FBaEIsVUFBaUIsU0FBZ0I7UUFFN0IsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBRWpCLElBQUksU0FBUyxHQUFPLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN4QyxJQUFJLEtBQUssR0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDN0IsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2IsS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUcxQixJQUFJLFFBQVEsR0FBTyxDQUFDLENBQUMseUNBQXlDLENBQUMsQ0FBQztRQUNoRSxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXpCLFFBQVEsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGNBQVksS0FBSyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLFVBQVUsQ0FBQyxjQUFZLEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBQSxDQUFDLEVBQUUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRWxFLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTVCLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVPLDRCQUFZLEdBQXBCO1FBRUksRUFBRSxDQUFBLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFdEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsMENBQTBDLENBQUMsQ0FBQztRQUNuRSxDQUFDO1FBRUQsTUFBTSxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFTywyQkFBVyxHQUFuQixVQUFvQixLQUFTO1FBRXpCLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUN6QixLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFBQSxDQUFDLENBQ25CLENBQUM7SUFDTixDQUFDO0lBQ0wsWUFBQztBQUFELENBakZBLEFBaUZDO0FBN0VrQixhQUFPLEdBQUcsR0FBRyxDQUFDIiwiZmlsZSI6ImVsZW1lbnRzL3RvYXN0L1RvYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdHlwZXMvanF1ZXJ5L2luZGV4LmQudHNcIiAvPlxuXG5lbnVtIFR5cGVUb2FzdCB7XG4gICAgSU5GTyxcbiAgICBXQVJOSU5HLFxuICAgIEVSUk9SXG59XG5cbmNsYXNzIFRvYXN0IHtcblxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOlRvYXN0O1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgRkFERV9NUyA9IDQwMDtcbiAgICBwcml2YXRlIFJFTU9WRV9USU1FX01TID0gMTAwMDA7XG5cbiAgICBwcml2YXRlIHBhcmVudDphbnk7XG4gICAgcHJpdmF0ZSBkdXJhdGlvbjtcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudDphbnkpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSB0aGlzLlJFTU9WRV9USU1FX01TO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93U3VjY2Vzcyh0aXRsZTpzdHJpbmcsIG1lc3NhZ2U6c3RyaW5nKSB7XG4gICAgICAgIHZhciB0ZXh0OiBzdHJpbmcgPSB0aGlzLmdldEN1c3RvbVRvYXN0KHRpdGxlLCBtZXNzYWdlLCBcInN1Y2Nlc3NcIik7XG4gICAgICAgIHZhciB0b2FzdDphbnkgPSB0aGlzLmFkZFRvYXN0KHRleHQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93SW5mbyh0aXRsZTpzdHJpbmcsIG1lc3NhZ2U6c3RyaW5nKSB7XG4gICAgICAgIHZhciB0ZXh0OiBzdHJpbmcgPSB0aGlzLmdldEN1c3RvbVRvYXN0KHRpdGxlLCBtZXNzYWdlLCBcImluZm9cIik7XG4gICAgICAgIHZhciB0b2FzdDphbnkgPSB0aGlzLmFkZFRvYXN0KHRleHQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93V2FybmluZyh0aXRsZTpzdHJpbmcsIG1lc3NhZ2U6c3RyaW5nKSB7XG4gICAgICAgIHZhciB0ZXh0OiBzdHJpbmcgPSB0aGlzLmdldEN1c3RvbVRvYXN0KHRpdGxlLCBtZXNzYWdlLCBcIndhcm5pbmdcIik7XG4gICAgICAgIHZhciB0b2FzdDphbnkgPSB0aGlzLmFkZFRvYXN0KHRleHQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93RXJyb3IodGl0bGU6c3RyaW5nLCBtZXNzYWdlOnN0cmluZykge1xuICAgICAgICB2YXIgdGV4dDogc3RyaW5nID0gdGhpcy5nZXRDdXN0b21Ub2FzdCh0aXRsZSwgbWVzc2FnZSwgXCJlcnJvclwiKTtcbiAgICAgICAgdmFyIHRvYXN0OmFueSA9IHRoaXMuYWRkVG9hc3QodGV4dCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRDdXN0b21Ub2FzdCh0aXRsZTpzdHJpbmcsIG1lc3NhZ2U6c3RyaW5nLCB0eXBlOnN0cmluZyk6c3RyaW5nIHtcbiAgICAgICAgdmFyIHRleHQ6IHN0cmluZyA9XG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImRqLXRvYXN0XCI+PGRpdiBjbGFzcz1cImRqLXRvYXN0LWljb24tJyArIHR5cGUgKyAnXCI+PC9kaXY+JyArXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cImRqLXRvYXN0LXRleHRcIj48ZGl2IGNsYXNzPVwiZGotdG9hc3QtdGl0bGVcIj4nICtcbiAgICAgICAgICAgIHRpdGxlICsgJzwvZGl2PjxkaXYgY2xhc3M9XCJkai10b2FzdC1tZXNzYWdlXCI+JyArXG4gICAgICAgICAgICBtZXNzYWdlICsgJzwvZGl2PjwvZGl2PjwvZGl2Pic7XG4gICAgICAgIHJldHVybiB0ZXh0O1xuICAgIH1cblxuICAgIHByaXZhdGUgYWRkVG9hc3QodG9hc3RIdG1sOnN0cmluZyk6YW55IHtcblxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIHZhciBjb250YWluZXI6YW55ID0gdGhpcy5nZXRDb250YWluZXIoKTtcbiAgICAgICAgdmFyIHRvYXN0OmFueSA9ICQodG9hc3RIdG1sKTtcbiAgICAgICAgdG9hc3QuaGlkZSgpO1xuICAgICAgICB0b2FzdC5hcHBlbmRUbyhjb250YWluZXIpO1xuXG4gICAgICAgIC8vIEFkZCBjbG9zZSBidXR0b25cbiAgICAgICAgdmFyIGNsb3NlQnRuOmFueSA9ICQoJzxkaXYgY2xhc3M9XCJkai10b2FzdC1pY29uLWNsb3NlXCI+PC9kaXY+Jyk7XG4gICAgICAgIGNsb3NlQnRuLmFwcGVuZFRvKHRvYXN0KTtcblxuICAgICAgICBjbG9zZUJ0bi5vbihcInBvaW50ZXJkb3duXCIsIGZ1bmN0aW9uKCkge190aGlzLnJlbW92ZVRvYXN0KHRvYXN0KX0pO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge190aGlzLnJlbW92ZVRvYXN0KHRvYXN0KX0sIF90aGlzLmR1cmF0aW9uKTtcblxuICAgICAgICB0b2FzdC5mYWRlSW4oVG9hc3QuRkFERV9NUyk7XG5cbiAgICAgICAgcmV0dXJuIHRvYXN0O1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0Q29udGFpbmVyKCk6YW55IHtcblxuICAgICAgICBpZigkKFwiLmRqLXRvYXN0LWNvbnRhaW5lclwiKS5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgLy8gQ29udGFpbmVyIGRvZXNuJ3QgZXhpc3RcbiAgICAgICAgICAgIHRoaXMucGFyZW50LmFwcGVuZChcIjxkaXYgY2xhc3M9XFxcImRqLXRvYXN0LWNvbnRhaW5lclxcXCI+PC9kaXY+XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICQoXCIuZGotdG9hc3QtY29udGFpbmVyXCIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlVG9hc3QodG9hc3Q6YW55KSB7XG5cbiAgICAgICAgdG9hc3QuZmFkZU91dChUb2FzdC5GQURFX01TLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRvYXN0LnJlbW92ZSgpO31cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=
